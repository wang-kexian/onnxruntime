#################################################################################
#                               OneBranch Pipelines                             #
# This pipeline was created by EasyStart from a sample located at:              #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

trigger: none

variables:
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
  LinuxContainerImage: 'centos:centos7' # Docker image which is used to build the project https://aka.ms/obpipelines/containers
  DEBIAN_FRONTEND: noninteractive

resources:
  repositories: 
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/OneBranch.Official.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    cloudvault: # https://aka.ms/obpipelines/cloudvault
      enabled: false # set to true to enable cloudvault
      runmode: stage # linux can run CloudVault upload as a separate stage
      dependsOn: linux_build
      artifacts:
        - drop_linux_stage_linux_job

    globalSdl: # https://aka.ms/obpipelines/sdl
      # tsa:
      #  enabled: true # SDL results of non-official builds aren't uploaded to TSA by default.
      # credscan:
      #   suppressionsFile: $(Build.SourcesDirectory)\.config\CredScanSuppressions.json
      policheck:
        break: true # always break the build on policheck issues. You can disable it by setting to 'false'
      # suppression:
      #   suppressionFile: $(Build.SourcesDirectory)\.gdn\global.gdnsuppress

    stages:
    - stage: Windows_Build
      jobs:
      - job: main
        pool:
          type: windows  
        
        variables:
          ob_outputDirectory: '$(REPOROOT)\out'
          ob_sdl_binskim_break: true 
          ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
            ob_symbolsPublishing_enabled: true

        steps:        
        - script: |
            @echo off
            set vswherepath="%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe"
            for /f "usebackq delims=" %%i in (`%vswherepath% -latest -property installationPath`) do (
              set vslatest="%%i"
              if exist "%%i\Common7\Tools\vsdevcmd.bat" (
                set vsdevcmd="%%i\Common7\Tools\vsdevcmd.bat"
              )
            )
            
            @echo vslatest %vslatest%
            @echo vsdevcmd %vsdevcmd%
            
            @echo ##vso[task.setvariable variable=vslatest]%vslatest%
            @echo ##vso[task.setvariable variable=vsdevcmd]%vsdevcmd%
          displayName: 'locate vsdevcmd via vswhere'
        - task: UsePythonVersion@0
          inputs: 
            versionSpec: '3.7' 
            addToPath: true 
              architecture: x64
  
